@using BlazorStudio.ClassLib.Context
@using Microsoft.AspNetCore.Components
@using BlazorStudio.RazorLib.Git.InternalComponents

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.GitContext"
                 ClassCssString="bstudio_git-display"
                 StyleCssString="height: 100%; width: 100%;">

    @{
        var gitState = GitStateWrap.Value;
    }
    
    <div class="bstudio_section-title">
        Git Changes
        
        <button class="balc_button"
                @onclick="RefreshGitOnClick"
                @onclick:stopPropagation="true">
            <IconRefresh/>
        </button>
        
        @{ var mostRecentActiveGitTask = gitState.ActiveGitTasks.LastOrDefault(); }
        
        @if (mostRecentActiveGitTask is not null)
        {
            <span>
                @mostRecentActiveGitTask.DisplayName
            </span>
        }
    </div>

    <div class="bstudio_section-body"
         style="width: 100%;">
        
        @if (gitState.GitFolderAbsoluteFilePath is null)
        {
            <div class="bstudio_git-changes-git-folder-not-found">
                <div>
                    
                    <em class="balc_em">.git</em>

                    folder was not found.
                </div>
                
                @if (gitState.MostRecentTryFindGitFolderInDirectoryAction is not null)
                {
                    <div>
                        Searched in folder:
                    
                        <div class="balc_indent-child-content">
                            <em class="balc_em">
                                @gitState.MostRecentTryFindGitFolderInDirectoryAction.DirectoryAbsoluteFilePath.GetAbsoluteFilePathString()
                            </em>
                        </div>
                    </div>
                }

                <button class="balc_button"
                        @onclick="GitInitOnClick">
                    Git Init
                </button>
            </div>
        }
        else
        {
            <div>
                .git folder:
                    
                <div class="balc_indent-child-content">
                    <em class="balc_em">
                        @gitState.GitFolderAbsoluteFilePath.GetAbsoluteFilePathString()
                    </em>
                </div>
            </div>
            
            <hr/>
            
            <GitStatusOutput/>
        }
    </div>
</ContextBoundary>
