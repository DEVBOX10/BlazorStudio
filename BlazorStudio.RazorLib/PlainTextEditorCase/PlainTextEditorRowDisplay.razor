@using BlazorStudio.ClassLib.Store.PlainTextEditorCase
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div id="@IsActiveRowId"
     class="pte_plain-text-editor-row-display @IsActiveCss"
     style="@StyleCssString"
     title="@RowIndex"
     @onclick="DispatchPlainTextEditorOnClickAction">
    
    <PlainTextEditorLineNumberDisplay MostDigitsInARowNumber="MostDigitsInARowNumber"/>

    <div class="pte_plain-text-editor-row-display-body"
         style="@WidthStyleCss">

        @{
            // Ensure reference to PlainTextEditorRow does
            // not change while looping over tokens
            // by making a local reference to it.
            var currentPlainTextEditorRow = PlainTextEditorRow;

            // The first character is always a 'fake' StartOfRowToken and should not be counted.
            var runningTotalOfCharacters = 0;

            for (int i = 0; i < currentPlainTextEditorRow.Tokens.Count; i++)
            {
                var tokenIndex = i;

                var token = currentPlainTextEditorRow.Tokens[tokenIndex];

                var localRunningTotalOfCharacters = runningTotalOfCharacters;

                runningTotalOfCharacters += token.PlainText.Length;

                <CascadingValue Name="TokenIndex" Value="tokenIndex">
                    <TextTokenDisplay @key="token.Key"
                                      TextToken="token"
                                      StartOfSpanRelativeToRow="localRunningTotalOfCharacters"
                                      StartOfRowSpanRelativeToDocument="VirtualCharacterIndexMarkerForStartOfARow[RowIndex]"/>
                </CascadingValue>
            }
        }
    </div>
</div>
