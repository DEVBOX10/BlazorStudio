@using Fluxor.Blazor.Web.Components
@using BlazorStudio.ClassLib.Store.PlainTextEditorCase
@using System.Diagnostics.CodeAnalysis

@inherits FluxorComponent

@if (PlainTextEditorSelector.Value is null)
{
    <div>PlainTextEditorSelector.Value is null</div>
}
else
{
    // Ensure reference to PlainTextEditorSelector does
    // not change while looping over rows
    // by making a local reference to it.
    var currentPlainTextEditor = PlainTextEditorSelector.Value;

    <div class="pte_plain-text-editor-wrapping">
        
        <PlainTextEditorHeader PlainTextEditor="currentPlainTextEditor"
                           WidthAndHeightTestResult="_widthAndHeightTestResult" />
        
        <div id="@PlainTextEditorDisplayId"
             class="pte_plain-text-editor-display @IsFocusedCssClass"
             style="@GetStyleCss()"
             @ref="_plainTextEditor"
             @onclick="FocusPlainTextEditorOnClick"
             @onkeydown:preventDefault="true">
            
            @{
                var mostDigitsInARowNumber = currentPlainTextEditor.FileHandle.VirtualRowCount.ToString().Length;

                                    <CascadingValue Value="currentPlainTextEditor.PlainTextEditorKey">
                                        <CascadingValue Value="_isFocused">
                                            <CascadingValue Name="CurrentRowIndex" Value="currentPlainTextEditor.CurrentRowIndex">
                                                <CascadingValue Name="RowIndexOffset" Value="currentPlainTextEditor.RowIndexOffset">
                                                    <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                                                        
                                                        @if (_isInitialized)
                                            {
                                                            <BlazorStudio.RazorLib.VirtualizeComponents.VirtualizeCoordinateSystem @ref="_virtualizeCoordinateSystem"
                                                                                                                       T="(int Index, IPlainTextEditorRow PlainTextEditorRow)"
                                                                                                                       VirtualizeCoordinateSystemMessage="currentPlainTextEditor.VirtualizeCoordinateSystemMessage"
                                                                                                                       DimensionsOfCoordinateSystemViewport="_dimensionsOfCoordinateSystemViewport"
                                                                                                                       RequestCallbackAction="OnRequestCallbackAction"
                                                                                                                       PaddingInPixels="100"
                                                                                                                       OnAfterFirstRenderCallbackFunc="OnAfterFirstRenderCallbackFunc">
                                                                <ItemRenderFragment Context="rowTuple">
                                                                    <CascadingValue Name="RowIndex" Value="rowTuple.Index">
                                                                        <PlainTextEditorRowDisplay @key="rowTuple.PlainTextEditorRow.Key"
                                                                                       PlainTextEditorRow="rowTuple.PlainTextEditorRow"
                                                                                       MostDigitsInARowNumber="mostDigitsInARowNumber"/>
                                                                    </CascadingValue>
                                                                </ItemRenderFragment>

                                                                <MarkerRenderFragment>
                                                                    <input type="text"
                                                               readonly="readonly"
                                                               style="@GetActivePositionMarkerDimensions(currentPlainTextEditor)"
                                                                           @ref="_activePositionMarker"
                                                                           @onkeydown="OnKeyDown"
                                                                           @onfocusin="OnFocusIn"
                                                                           @onfocusout="OnFocusOut"/>
                                                                    @*
                                                    <span id="@ActiveRowPositionMarkerId"
                                                    class="pte_visually-hidden pte_unselectable pte_active-row-position-marker"
                                                    style="position: absolute; @InputFocusTrapTopStyleCss">
                                                    </span>
                                                *@
                                                                </MarkerRenderFragment>
                                                            </BlazorStudio.RazorLib.VirtualizeComponents.VirtualizeCoordinateSystem>
                                            }
                                                        
                                                        @{
                                        var testRow = currentPlainTextEditor.GetWidthAndHeightTestPlainTextEditorRow();
                                                                <CascadingValue Name="RowIndex" Value="0">

                                            <div style="position: absolute; left: 0; top: 0; visibility: hidden;">
                                                                        <PlainTextEditorRowDisplay @key="testRow.Key"
                                                               PlainTextEditorRow="testRow"
                                                               MostDigitsInARowNumber="mostDigitsInARowNumber"
                                                               GetWidthAndHeightTest="true"
                                                               WidthAndHeightTestId="@_widthAndHeightTestId" />
                                                                    </div>


                                                                </CascadingValue>
                                                        }
                                                    </CascadingValue>
                                                </CascadingValue>
                                            </CascadingValue>
                                        </CascadingValue>
                                    </CascadingValue>
            }

            <PlainTextEditorFooter PlainTextEditor="currentPlainTextEditor"/>
        </div>
    </div>
}