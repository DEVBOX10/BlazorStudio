@using Fluxor.Blazor.Web.Components
@using BlazorStudio.ClassLib.Store.PlainTextEditorCase

@inherits FluxorComponent

@if (PlainTextEditorSelector.Value is null)
{
    <div>PlainTextEditorSelector.Value is null</div>
}
else
{
    <div class="pte_plain-text-editor-wrapping">
        <div>
            Font Size: @(PlainTextEditorSelector.Value.RichTextEditorOptions.FontSizeInPixels)px
        </div>
        <div>
            Use the '<em>F1</em>' key to scroll the caret row into view if it is offscreen.
        </div>

        <div id="@PlainTextEditorDisplayId"
             class="pte_plain-text-editor-display @IsFocusedCssClass"
             style="@GetStyleCss()"
             @ref="_plainTextEditor"
             @onclick="FocusPlainTextEditorOnClick"
             @onkeydown:preventDefault="true"
             @onkeydown="OnKeyDown"
             @onfocusin="OnFocusIn"
             @onfocusout="OnFocusOut"
             tabindex="-1">
            
            <span id="@ActiveRowPositionMarkerId"
                  class="pte_visually-hidden pte_unselectable pte_active-row-position-marker"
                  style="position: absolute; @InputFocusTrapTopStyleCss">
            </span>
            
            @{
                // Ensure reference to PlainTextEditorSelector does
                // not change while looping over rows
                // by making a local reference to it.
                var currentPlainTextEditor = PlainTextEditorSelector.Value;

                var mostDigitsInARowNumber = currentPlainTextEditor.FileCoordinateGrid.RowCount.ToString().Length;

                <CascadingValue Value="currentPlainTextEditor.PlainTextEditorKey">
                <CascadingValue Value="_isFocused">
                    <CascadingValue Name="CurrentRowIndex" Value="currentPlainTextEditor.CurrentRowIndex">
                        <CascadingValue Name="StartingRowIndex" Value="currentPlainTextEditor.RowIndexOffset">
                            <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                                <BlazorStudio.RazorLib.VirtualizeComponents.VirtualizeCoordinateSystem @ref="_virtualizeCoordinateSystem"
                                                                                                       T="(int Index, IPlainTextEditorRow PlainTextEditorRow)"
                                                                                                       Context="rowTuple"
                                                                                                       DimensionsOfCoordinateSystemViewport="_dimensionsOfCoordinateSystemViewport"
                                                                                                       RequestCallbackAction="OnRequestCallbackAction"
                                                                                                       PaddingInPixels="250"
                                                                                                       OnAfterFirstRenderCallbackFunc="OnAfterFirstRenderCallbackFunc">
                                    <CascadingValue Name="RowIndex" Value="rowTuple.Index">
                                        <PlainTextEditorRowDisplay @key="rowTuple.PlainTextEditorRow.Key"
                                                                   PlainTextEditorRow="rowTuple.PlainTextEditorRow"
                                                                   MostDigitsInARowNumber="mostDigitsInARowNumber" />
                                    </CascadingValue>                                    
                                </BlazorStudio.RazorLib.VirtualizeComponents.VirtualizeCoordinateSystem>
                            </CascadingValue>
                        </CascadingValue>
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
            }
        </div>
    </div>
}