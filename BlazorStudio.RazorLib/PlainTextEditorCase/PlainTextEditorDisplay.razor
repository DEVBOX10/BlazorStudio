@using Fluxor.Blazor.Web.Components
@using BlazorStudio.ClassLib.Store.PlainTextEditorCase

@inherits FluxorComponent

@if (PlainTextEditorSelector.Value is null)
{
    <div>PlainTextEditorSelector.Value is null</div>
}
else
{
    // Ensure reference to PlainTextEditorSelector does
    // not change while looping over rows
    // by making a local reference to it.
    var currentPlainTextEditor = PlainTextEditorSelector.Value;

    <div class="pte_plain-text-editor-wrapping">
        @*<div>
            Font Size: @(PlainTextEditorSelector.Value.RichTextEditorOptions.FontSizeInPixels)px
        </div>
        <div>
            Use the '<em>F1</em>' key to scroll the caret row into view if it is offscreen.
        </div>
        *@
        <div class="bstudio_debug-info">
            @if (_virtualizeCoordinateSystem is not null)
            {
                <div>Total Row Count = @(PlainTextEditorSelector.Value.FileCoordinateGrid?.RowCount ?? 0)</div>
                <div>Most characters on a single row = @(PlainTextEditorSelector.Value.FileCoordinateGrid?.CharacterLengthOfLongestRow ?? 0)</div>
                <div>_data.Length = @_virtualizeCoordinateSystem.Data.Length</div>

                <hr/>
                
                <div>
                    ScrollLeft
                    &nbsp;->&nbsp; 
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ScrollLeft
                </div>
                <div>
                    ScrollTop
                    &nbsp;->&nbsp; 
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ScrollTop
                </div>
                <div>
                    ScrollWidth
                    &nbsp;->&nbsp;
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ScrollWidth
                </div>
                <div>
                    ScrollHeight
                    &nbsp;->&nbsp;
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ScrollHeight
                </div>

                <hr/>

                <div>
                    ViewportWidth
                    &nbsp;->&nbsp;
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ViewportWidth
                </div>
                <div>
                    ViewportHeight
                    &nbsp;->&nbsp; 
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ViewportHeight
                </div>
                <div>
                    Content width
                    &nbsp;->&nbsp; 
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ActualWidthOfResult
                </div>
                <div>
                    Content height
                    &nbsp;->&nbsp;
                    @currentPlainTextEditor.VirtualizeCoordinateSystemResult.ActualHeightOfResult
                </div>
            }
            else
            {
                <div>_virtualizeCoordinateSystem is null</div>
            }
        </div>

        <div id="@PlainTextEditorDisplayId"
             class="pte_plain-text-editor-display @IsFocusedCssClass"
             style="@GetStyleCss()"
             @ref="_plainTextEditor"
             @onclick="FocusPlainTextEditorOnClick"
             @onkeydown:preventDefault="true"
             @onkeydown="OnKeyDown"
             @onfocusin="OnFocusIn"
             @onfocusout="OnFocusOut"
             tabindex="-1">

            @{
                var mostDigitsInARowNumber = currentPlainTextEditor.FileCoordinateGrid.RowCount.ToString().Length;

                        <CascadingValue Value="currentPlainTextEditor.PlainTextEditorKey">
                            <CascadingValue Value="_isFocused">
                                <CascadingValue Name="CurrentRowIndex" Value="currentPlainTextEditor.CurrentRowIndex">
                                    <CascadingValue Name="RowIndexOffset" Value="currentPlainTextEditor.RowIndexOffset">
                                        <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                                            <BlazorStudio.RazorLib.VirtualizeComponents.VirtualizeCoordinateSystem @ref="_virtualizeCoordinateSystem"
                                                                                                           T="(int Index, IPlainTextEditorRow PlainTextEditorRow)"
                                                                                                           DimensionsOfCoordinateSystemViewport="_dimensionsOfCoordinateSystemViewport"
                                                                                                           RequestCallbackAction="OnRequestCallbackAction"
                                                                                                           PaddingInPixels="250"
                                                                                                           OnAfterFirstRenderCallbackFunc="OnAfterFirstRenderCallbackFunc">
                                                <ItemRenderFragment Context="rowTuple">
                                                    <CascadingValue Name="RowIndex" Value="rowTuple.Index">
                                                        <PlainTextEditorRowDisplay @key="rowTuple.PlainTextEditorRow.Key"
                                                                           PlainTextEditorRow="rowTuple.PlainTextEditorRow"
                                                                           MostDigitsInARowNumber="mostDigitsInARowNumber"/>
                                                    </CascadingValue>
                                                </ItemRenderFragment>

                                                <MarkerRenderFragment>
                                                    <span id="@ActiveRowPositionMarkerId"
                                                          class="pte_visually-hidden pte_unselectable pte_active-row-position-marker"
                                                          style="position: absolute; @InputFocusTrapTopStyleCss">
                                                    </span>
                                                </MarkerRenderFragment>
                                            </BlazorStudio.RazorLib.VirtualizeComponents.VirtualizeCoordinateSystem>
                                        </CascadingValue>
                                    </CascadingValue>
                                </CascadingValue>
                            </CascadingValue>
                        </CascadingValue>
            }
        </div>
    </div>
}