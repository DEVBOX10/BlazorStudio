@using BlazorStudio.ClassLib.Context
@using BlazorStudio.ClassLib.Store.SolutionExplorer
@using BlazorStudio.RazorLib.ContextCase
@using BlazorALaCarte.Shared.Dropdown
@using BlazorALaCarte.TreeView
@using BlazorALaCarte.TreeView.Displays

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.FolderExplorerContext"
                 ClassCssString="bstudio_folder-explorer-display"
                 StyleCssString="height: 100%">
    @{
        var solutionExplorerState = SolutionExplorerStateWrap.Value;

        <div class="bstudio_section-title">
            Solution Explorer
            @if (solutionExplorerState.PerformingAsynchronousOperation)
            {
                <text>&nbsp;</text>
                <IconLoading/>
            }
        </div>

        <div class="bstudio_section-body">
            @{
                if (solutionExplorerState.SolutionAbsoluteFilePath is null)
                {
                    <ButtonDisplay OnClickFunc="async () => await SolutionExplorerState.ShowInputFileAsync(Dispatcher)">
                        Open Solution
                    </ButtonDisplay>
                }
                else
                {
                    <CascadingValue Name="BlazorTreeViewIconWidth" Value="AppOptionsStateWrap.Value.Options.IconSizeInPixels">
                        <CascadingValue Name="BlazorTreeViewIconHeight" Value="AppOptionsStateWrap.Value.Options.IconSizeInPixels">
                            <CascadingValue Name="OffsetPerDepthInPixels" Value="OffsetPerDepthInPixels">
                                <TreeViewStateDisplay TreeViewStateKey="TreeViewSolutionExplorerStateKey"
                                                      CssStyleString="height: 100%;"
                                                      OnContextMenuFunc="OnTreeViewContextMenuFunc"
                                                      TreeViewKeyboardEventHandler="_solutionExplorerTreeViewKeymap"
                                                      TreeViewMouseEventHandler="_solutionExplorerTreeViewMouseEventHandler"/>
                            </CascadingValue>
                        </CascadingValue>
                    </CascadingValue>


                    <DropdownDisplay DropdownKey="SolutionExplorerContextMenu.ContextMenuEventDropdownKey"
                                     DropdownPositionKind="DropdownPositionKind.Unset"
                                     CssStyleString="@SolutionExplorerContextMenu.GetContextMenuCssStyleString(_mostRecentTreeViewCommandParameter)">

                        <SolutionExplorerContextMenu TreeViewCommandParameter="_mostRecentTreeViewCommandParameter"/>
                    </DropdownDisplay>
                }
            }
        </div>
    }
</ContextBoundary>