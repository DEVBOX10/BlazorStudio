@using BlazorStudio.ClassLib.Context
@using BlazorStudio.ClassLib.Store.SolutionExplorer
@using BlazorStudio.RazorLib.ContextCase
@using BlazorTreeView.RazorLib
@using BlazorTreeView.RazorLib.Store.TreeViewCase
@using BlazorStudio.RazorLib.Menu
@using BlazorStudio.RazorLib.Dropdown
@using BlazorStudio.ClassLib.Dropdown

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.FolderExplorerContext"
                 ClassCssString="bstudio_folder-explorer-display"
                 StyleCssString="@($"height: 100% {SolutionExplorerElementDimensions.StyleString}")">
    @{
        var solutionExplorerState = SolutionExplorerStateWrap.Value;

        <div class="bstudio_section-title">
            Solution Explorer
            @if (solutionExplorerState.PerformingAsynchronousOperation)
            {
                <text>&nbsp;</text>
                <IconLoading/>
            }
        </div>

        <div class="bstudio_section-body">
            @{
                if (solutionExplorerState.SolutionAbsoluteFilePath is null)
                {
                    <ButtonDisplay OnClickFunc="async () => await SolutionExplorerState.ShowInputFileAsync(Dispatcher)">
                        Open Solution
                    </ButtonDisplay>
                }
                else
                {
                    <CascadingValue Name="BlazorTreeViewIconWidth" Value="IconStateWrap.Value.IconSizeInPixels">
                        <CascadingValue Name="BlazorTreeViewIconHeight" Value="IconStateWrap.Value.IconSizeInPixels">
                            <TreeViewStateDisplay TreeViewStateKey="TreeViewSolutionExplorerStateKey"
                                                  CssStyleString="height: 100%;"
                                                  OnContextMenuFunc="OnTreeViewContextMenuFunc"
                                                  TreeViewKeymap="_solutionExplorerTreeViewKeymap"
                                                  TreeViewMouseEventRegistrar="_treeViewMouseEventRegistrar"/>
                        </CascadingValue>
                    </CascadingValue>


                    <DropdownDisplay DropdownKey="SolutionExplorerContextMenu.ContextMenuEventDropdownKey"
                                     DropdownPositionKind="DropdownPositionKind.Unset"
                                     CssStyleString="@SolutionExplorerContextMenu.GetContextMenuCssStyleString(_mostRecentTreeViewContextMenuEvent)">

                        <SolutionExplorerContextMenu TreeViewContextMenuEvent="_mostRecentTreeViewContextMenuEvent"/>
                    </DropdownDisplay>
                }
            }
        </div>
    }
</ContextBoundary>