@using BlazorStudio.ClassLib.Context
@using BlazorStudio.ClassLib.Store.SolutionExplorer
@using BlazorStudio.RazorLib.ContextCase
@using BlazorStudio.RazorLib.TreeView
@using BlazorStudio.RazorLib.Menu

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.FolderExplorerContext"
                 ClassCssString="bstudio_folder-explorer-display"
                 StyleCssString="@($"height: 100% {SolutionExplorerElementDimensions.StyleString}")">
    @{
        var solutionExplorerState = SolutionExplorerStateWrap.Value;
        
        <div class="bstudio_section-title">
            Solution Explorer
            @if (solutionExplorerState.PerformingAsynchronousOperation)
            {
                <text>&nbsp;</text>
                <IconLoading/>
            }
        </div>

        <div class="bstudio_section-body">
            @{
                if (solutionExplorerState.SolutionAbsoluteFilePath is null)
                {
                    <ButtonDisplay OnClickFunc="async () => await SolutionExplorerState.ShowInputFileAsync(Dispatcher)">
                        Open Solution
                    </ButtonDisplay>
                }
                else
                {
                    <TreeViewDisplay TreeViewModel="_solutionTreeViewModel"
                                     TreeViewDisplayOnEventRegistration="_treeViewDisplayOnEventRegistration">
                        <ItemRenderFragment Context="treeViewModel">
                            <SolutionExplorerIconDisplay AbsoluteFilePath="treeViewModel.Item" />
                            @treeViewModel.Item.FilenameWithExtension
                        </ItemRenderFragment>

                        <ContextMenuEventRenderFragment Context="contextMenuEvent">
                            <div class="bstudio_dropdown-display-default-background"
                                 style="@GetStyleForContextMenu(contextMenuEvent.CapturedMouseEventArgs)">
                                <MenuDisplay MenuRecord="GetContextMenu(contextMenuEvent.TreeViewModel)"/>
                            </div>
                        </ContextMenuEventRenderFragment>
                    </TreeViewDisplay>
                }
            }
        </div>
    }
</ContextBoundary>