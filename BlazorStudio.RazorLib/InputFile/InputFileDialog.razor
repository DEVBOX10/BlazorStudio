@using BlazorStudio.ClassLib.FileSystem.Interfaces

<div class="bstudio_input-file-dialog">
        @if (_isInitialized)
        {
            <TreeViewWrapDisplay ShouldDispose="false"
                             TreeViewWrapKey="_inputFileTreeViewKey"
                             T="IAbsoluteFilePath"
                             RootItems="_rootAbsoluteFilePaths"
                             GetChildrenFunc="LoadAbsoluteFilePathChildrenAsync"
                             Context="absoluteFilePath"
                             OnEnterKeyDown="InputFileTreeViewOnEnterKeyDown"
                             OnSpaceKeyDown="InputFileTreeViewOnSpaceKeyDown"
                             IsExpandable="GetIsExpandable"
                             StyleString="height: 100%;"
                             BodyCssClassAttribute="bstudio_input-file-dialog-body">

                <ItemRenderFragment>
                    <span title="@absoluteFilePath.GetAbsoluteFilePathString()">
                        @absoluteFilePath.FilenameWithExtension
                    </span>
                </ItemRenderFragment>
                
                <OnContextMenuRenderFragment Context="contextMenuEventDto">
                    
                    <em>@contextMenuEventDto.Item.FilenameWithExtension</em>

                    <MenuDisplay MenuOptionRecords="GetMenuOptionRecords()"/>
                </OnContextMenuRenderFragment>

                <HeaderRenderFragment Context="activeItems">
                    <div class="bstudio_input-file-dialog-header">
                        @foreach (var activeItem in activeItems)
                        {
                            @activeItem.GetAbsoluteFilePathString()
                        }
                    </div>
                </HeaderRenderFragment>
                
                <FooterRenderFragment Context="activeItems">
                    <div class="bstudio_input-file-dialog-control-buttons">
                        @foreach (var activeItem in activeItems)
                        {
                            @activeItem.FilenameWithExtension
                        }
                        
                        <div>
                            @if (activeItems[0].IsDirectory)
                            {
                                <button class="btn btn-primary" @onclick="() => ConfirmOnClick(activeItems)">
                                    Confirm
                                    <span class="pte_unselectable" style="visibility: hidden;">a Directory</span>
                                </button>
                            }
                            else
                            {
                                <button disabled class="btn btn-primary">
                                    Choose a Directory
                                </button>
                            }

                            <button class="btn btn-warning" style="margin-left: 6px;" @onclick="CancelOnClick">
                                Cancel
                            </button>
                        </div>
                    </div>
                </FooterRenderFragment>
            </TreeViewWrapDisplay>
        }
        else
        {
            <div>Loading...</div>
        }
    </div>
