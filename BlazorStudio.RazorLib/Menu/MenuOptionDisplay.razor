@using BlazorStudio.ClassLib.Dropdown
@using BlazorStudio.RazorLib.Dropdown
@using BlazorStudio.ClassLib.CustomEvents

<div class="bstudio_menu-option-display bstudio_unselectable @IsActiveCssClass @HasWidgetActiveCssClass"
     tabindex="-1"
     @ref="_menuOptionDisplayElementReference"
     @onclick="HandleOnClick"
     @onclick:stopPropagation="true"
     @onkeydown="HandleOnKeyDown">
    
    @MenuOptionRecord.DisplayName
    
    @if (MenuOptionRecord.SubMenu is not null)
    {
        <IconChevronRight />
        
        <DropdownDisplay DropdownKey="_subMenuDropdownKey"
                         DropdownPositionKind="DropdownPositionKind.Horizontal"
                         ShouldDisplayOutOfBoundsClickDisplay="false">
            
            <div class="bstudio_dropdown-display-default-background">
                <MenuDisplay MenuRecord="MenuOptionRecord.SubMenu" />
            </div>
        </DropdownDisplay>
    }
    
    @if (_shouldDisplayWidget &&
         MenuOptionRecord.WidgetRendererType is not null)
    {
        <div class="bstudio_menu-option-widget" 
             @onclick:stopPropagation="true"
             @onkeydown:stopPropagation="true"
             @oncustomkeydown:stopPropagation="true"
             @oncontextmenu:stopPropagation="true">
            <CascadingValue Value="MenuOptionWidgetParameters">
                <DynamicComponent Type="MenuOptionRecord.WidgetRendererType"
                                  Parameters="MenuOptionRecord.WidgetParameters"/>
            </CascadingValue>
        </div>
    }
</div>