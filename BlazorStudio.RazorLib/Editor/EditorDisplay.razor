@using BlazorStudio.ClassLib.Store.PlainTextEditorCase
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="bstudio_editor-display"
     style="@Dimensions.DimensionsCssString">
    
    <h5 class="bstudio_h5-title">Editor Display</h5>
    
    @{
        var plainTextEditorStates = PlainTextEditorStatesWrap.Value;
        var editorState = EditorStateWrap.Value;

        PlainTextEditorKey? activePlainTextEditorKey = null;

        if (editorState.TabIndex < plainTextEditorStates.Array.Length)
        {
            activePlainTextEditorKey = plainTextEditorStates.Array[editorState.TabIndex];
        }

        if (activePlainTextEditorKey is not null)
        {
            <div class="bstudio_editor-tabs-listing">
                <CascadingValue Name="ActiveTabIndex" Value="editorState.TabIndex">
                    @for (int i = 0; i < plainTextEditorStates.Array.Length; i++)
                    {
                        var index = i;
                        var plainTextEditorKey = plainTextEditorStates.Array[index];
                        var plainTextEditor = plainTextEditorStates.Map[plainTextEditorKey];

                        <EditorTabDisplay TabIndex="index"
                                          SetActiveTabIndexOnClick="SetActiveTabIndexOnClick"
                                          PlainTextEditor="plainTextEditor" />
                    }
                </CascadingValue>
            </div>

            <BlazorStudio.RazorLib.PlainTextEditorCase.PlainTextEditorDisplay PlainTextEditorKey="activePlainTextEditorKey" />
        }
        else
        {
            <div>No opened files</div>
        }
    }
</div>