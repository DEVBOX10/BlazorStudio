@using BlazorStudio.ClassLib.Contexts
@using BlazorTextEditor.RazorLib
@using BlazorTextEditor.RazorLib.TextEditor

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ContextBoundary CssClassString="bstudio_editor-display bstudio_focus-display-large"
                 CssStyleString="@Dimensions.DimensionsCssString"
                 ContextKey="ContextFacts.EditorDisplayContext.ContextKey">

    <h5 class="bstudio_large-title" style="padding: 5px;">Editor Display</h5>

    <div style="padding: 0 5px; height: 100%;">
        @{
            var textEditorList = TextEditorService.TextEditorStates.TextEditorList;
            var activeTextEditor = EditorStateWrap.Value.TextEditorKey;

            <div class="bstudio_editor-tabs-listing">
                @for (int i = 0; i < textEditorList.Count; i++)
                {
                    var index = i;
                    var textEditor = textEditorList[index];

                    <EditorTabDisplay TabIndex="index"
                                      TextEditor="textEditor"/>
                }
            </div>

            if (activeTextEditor != TextEditorKey.Empty)
            {
                <TextEditorDisplay TextEditorKey="activeTextEditor"
                                   StyleCssString="width: 100%; height: 100%;"
                                   OnSaveRequested="HandleOnSaveRequested"
                                   AfterOnKeyDownAsync="HandleAfterOnKeyDownAsync">
                    
                    <OnContextMenuRenderFragment>
                        <TextEditorContextMenu />
                    </OnContextMenuRenderFragment>
                    
                    <AutoCompleteMenuRenderFragment>
                        <TextEditorAutoCompleteMenu AutoCompleteWordText="@_autoCompleteWordText" />
                    </AutoCompleteMenuRenderFragment>
                </TextEditorDisplay>
            }
        }
    </div>
</ContextBoundary>