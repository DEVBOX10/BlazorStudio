@using BlazorStudio.ClassLib.Store.PlainTextEditorCase
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="bstudio_editor-display bstudio_focus-display-large"
     style="@Dimensions.DimensionsCssString"
     @onfocusin="() => _contextBoundary.DispatchSetActiveContextStatesAction(new())"
     @onfocusin:stopPropagation="true"
     tabindex="-1"
     @ref="_editorDisplayElementReference">
    <ContextBoundary @ref="_contextBoundary" ContextRecord="ContextStateSelector.Value">

        <h5 class="bstudio_large-title" style="padding: 5px;">Editor Display</h5>

        <div style="padding: 0 5px; height: calc(100% - 2rem - 10px);">
            @{
                var plainTextEditorStates = PlainTextEditorStatesWrap.Value;
                var editorState = EditorStateWrap.Value;

                PlainTextEditorKey? activePlainTextEditorKey = null;

                if (editorState.TabIndex < plainTextEditorStates.Array.Length)
                {
                    activePlainTextEditorKey = plainTextEditorStates.Array[editorState.TabIndex];
                }

                if (activePlainTextEditorKey is not null)
                {
                    <div class="bstudio_editor-tabs-listing">
                        <CascadingValue Name="ActiveTabIndex" Value="editorState.TabIndex">
                            @for (int i = 0; i < plainTextEditorStates.Array.Length; i++)
                            {
                                var index = i;
                                var plainTextEditorKey = plainTextEditorStates.Array[index];
                                var plainTextEditor = plainTextEditorStates.Map[plainTextEditorKey];

                                <EditorTabDisplay TabIndex="index"
                                                  SetActiveTabIndexOnClick="SetActiveTabIndexOnClick"
                                                  PlainTextEditor="plainTextEditor"
                                                  DisposePlainTextEditorOnClick="DisposePlainTextEditorOnClick"/>
                            }
                        </CascadingValue>
                    </div>

                    <BlazorStudio.RazorLib.PlainTextEditorCase.PlainTextEditorDisplay PlainTextEditorKey="activePlainTextEditorKey"
                                                                                      AutomateDispose="false"
                                                                                      TabIndex="0" />
                }
                else
                {
                    <div>No opened files</div>
                }
            }
        </div>
    </ContextBoundary>
</div>