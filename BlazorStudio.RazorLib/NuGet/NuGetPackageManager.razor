@using BlazorStudio.ClassLib.Context
@using BlazorStudio.ClassLib.Store.TerminalCase

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.NuGetPackageManagerContext"
                 ClassCssString="bstudio_nu-get-package-manager-display"
                 StyleCssString="height: 100%; width: 100%;">

    <div class="bstudio_section-title">
        NuGet
    </div>

    <div class="bstudio_section-body"
         style="width: 100%;">
        
        @{
            var nuGetPackageManagerState = NuGetPackageManagerStateWrap.Value;
            var solutionExplorerState = SolutionExplorerStateWrap.Value;

            if (solutionExplorerState.Solution is null)
            {
                <div>
                    Solution has not yet been chosen
                </div>
            }
            else
            {
                <select @onchange="e => SelectedProjectToModifyChanged(e, solutionExplorerState)">
                    @{
                        <option value="@Guid.Empty"
                                selected="@(!ValidateSolutionContainsSelectedProject(solutionExplorerState, nuGetPackageManagerState))">
                            Select a project to modify
                        </option>
                        
                        foreach (var project in solutionExplorerState.Solution.Projects)
                        {
                            <option value="@project.Id.Id.ToString()"
                                    selected="@CheckIfProjectIsSelected(project, nuGetPackageManagerState)">
                                @project.Name
                            </option>
                        }
                    }
                </select>

                if (nuGetPackageManagerState.SelectedProjectToModify is null)
                {
                    <div>Selected Project to Modify is null</div>                    
                }
                else
                {
                    <div>@nuGetPackageManagerState.SelectedProjectToModify.Name</div>
                }
                
                
            }
        }
    </div>
</ContextBoundary>
