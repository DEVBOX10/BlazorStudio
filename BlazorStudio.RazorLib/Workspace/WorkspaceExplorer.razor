@using BlazorStudio.Shared.FileSystem.Interfaces
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="bstudio_workspace-explorer"
     style="@Dimensions.DimensionsCssString">

    <h5 class="bstudio_h5-title" style="height: 2rem;">
        Workspace Explorer&nbsp;
    </h5>

    @{
        var workspaceState = WorkspaceStateWrap.Value;

        if (workspaceState.WorkspaceAbsoluteFilePath is null)
        {
                <div>
                    WorkspaceAbsoluteFilePath is null, use the InputFile dialog to select a Workspace
                    directory.
                </div>
                <div>
                    <BlazorStudio.RazorLib.InputFile.InputFileDialogEntryPoint />
                </div>
        }
        else
        {
            if (_isInitialized)
            {
                if (_workspaceStateWrapStateChangedRichErrorModel is not null)
                {
                        <RichErrorDisplay RichErrorModel="_workspaceStateWrapStateChangedRichErrorModel" />
                }
                else
                {
                    <div class="bstudio_workspace-explorer">                        
                        
                        <DropdownDisplay Dimensions="_fileDropdownDimensions"
                                         DropdownKey="_fileDropdownKey">
                         
                            @{
                                var contextMenuEventDto = new TreeViewWrapDisplay<IAbsoluteFilePath>.ContextMenuEventDto<IAbsoluteFilePath>
                                {
                                    Item = workspaceState.WorkspaceAbsoluteFilePath,
                                    MouseEventArgs = null,
                                    RefreshContextMenuTarget = async () => WorkspaceStateWrap_StateChanged(null, EventArgs.Empty)
                                }; 
                
                                <em>@contextMenuEventDto.Item.FilenameWithExtension</em>

                                <MenuDisplay MenuOptionRecords="GetMenuOptionRecords(contextMenuEventDto)" />
                            }

                        </DropdownDisplay>

                        <TreeViewWrapDisplay @ref="_treeViewWrapDisplay"
                             ShouldDispose="false"
                             TreeViewWrapKey="_inputFileTreeViewKey"
                             T="IAbsoluteFilePath"
                             RootItems="_rootAbsoluteFilePaths"
                             GetChildrenFunc="LoadAbsoluteFilePathChildrenAsync"
                             Context="absoluteFilePath"
                             OnEnterKeyDown="WorkspaceExplorerTreeViewOnEnterKeyDown"
                             OnSpaceKeyDown="WorkspaceExplorerTreeViewOnSpaceKeyDown"
                             IsExpandable="GetIsExpandable"
                             StyleString="height: 100%;"
                             BodyCssClassAttribute="bstudio_workspace-explorer-tree-view-body">

                                <ItemRenderFragment>
                                    <span title="@absoluteFilePath.GetAbsoluteFilePathString()">
                                        @absoluteFilePath.FilenameWithExtension
                                    </span>
                                </ItemRenderFragment>

                                <OnContextMenuRenderFragment Context="contextMenuEventDto">

                                    <em>@contextMenuEventDto.Item.FilenameWithExtension</em>

                                    <MenuDisplay MenuOptionRecords="GetMenuOptionRecords(contextMenuEventDto)" />

                                </OnContextMenuRenderFragment>

                                <HeaderRenderFragment Context="activeItems">
                                    <div class="bstudio_workspace-explorer-tree-view-header">
                                        <button class="btn btn-primary"
                                                @onclick="() => DispatchAddActiveDropdownKeyActionOnClick(_fileDropdownKey)">
                                            <IconAdd/> New File
                                        </button>
                                        &nbsp;
                                        to
                                        &nbsp;
                                        <span title="@workspaceState.WorkspaceAbsoluteFilePath.GetAbsoluteFilePathString()">
                                            @workspaceState.WorkspaceAbsoluteFilePath.FilenameWithExtension
                                        </span>
                                    </div>
                                </HeaderRenderFragment>
                            </TreeViewWrapDisplay>
                        </div>
                }
            }
        }
    }
</div>