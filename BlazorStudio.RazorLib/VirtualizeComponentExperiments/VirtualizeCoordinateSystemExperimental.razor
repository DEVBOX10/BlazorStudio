@typeparam TItem

<VirtualizeBoundaryDisplay @ref="_topBoundaryVirtualizeBoundaryDisplay" 
                           VirtualizeBoundary="_virtualizeRenderData.TopVirtualizeBoundary" />
@if (Items?.Any() ?? false)
{
    if (_dimensions is null || _forceGetDimensions)
    {
        // Measure the dimensions of a single rendered item.
        <MeasureDimensionsForVirtualization Item="Items.ElementAt(0)"
                                            ItemRenderFragment="ChildContent"
                                            OnAfterMeasurementTakenEventCallback="OnAfterMeasurementTaken" />
    }
    else
    {
        // Render the items that are within the virtualization bounds.
        foreach (var wrapper in _virtualizeRenderData.VirtualizeItemWrappers ?? Array.Empty<VirtualizeItemWrapper<TItem>>())
        {
            <div style="position: absolute; top: @(wrapper.TopInPixels)px; width: @(wrapper.WidthInPercentage)%; height: @(_dimensions.HeightOfItemInPixels)px;">
                @ChildContent(wrapper.Item)
            </div>
        }   
    }
}
else
{
    // No items were provided.
    <div>No items</div>
}
<VirtualizeBoundaryDisplay @ref="_bottomBoundaryVirtualizeBoundaryDisplay" 
                           VirtualizeBoundary="_virtualizeRenderData.BottomVirtualizeBoundary"/>
